// Auto-generated code. Do not edit.
namespace myImages {

    helpers._registerFactory("image", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "image1":
            case "Enterprise":return img`
................................
................................
.............1111111............
............111111111...........
...........11111111111..........
..........1111111111111.........
..........1111199911111.........
..........1111191911111.........
..........1111199911111.........
..........1111111111111.........
..........1111111111111.........
..........1111111111111.........
...........11111111111..........
............111111111...........
.............1111111............
................1...............
................1...............
................1...............
................1...............
...............111..............
..........1....111....1.........
..........1....111....1.........
.........11..111111...11........
.........11.11.111111111........
.........111...111...111........
.........11....111....11........
.........11....111....11........
.........11....111....11........
.........11....111....11........
.........11.....1.....11........
..........1...........1.........
................................
`;
            case "image2":
            case "zap":return img`
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
7 7 
`;
            case "image3":
            case "rock1":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . f f f . . . 
. . . . f f f . . f f . f . . . 
. . . . f b f . . f . . f . . . 
. . . . f b f . f b f f . . . . 
. . f f b b f f b b f . . . . . 
. . f f b b f f b b f . . . . . 
. . f b b b b b b b f . . . . . 
. . f b b b b b b b f f . . . . 
. . f b b b b b b b b b f . . . 
. . . f b b b b b b b b f f . . 
. . . f f f b b b b b f f f . . 
. . . . f b b b b b f f . . . . 
. . . . f f b b b f . . . . . . 
. . . . . f f f f f . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image4":
            case "rock0":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . 2 2 . . . . 
. 2 2 2 . . . . . 2 2 2 . . . . 
. 2 5 5 2 . . . 2 5 5 2 2 . . . 
. 2 2 5 2 2 2 2 2 5 5 5 2 . . . 
. . 2 2 5 5 5 5 5 5 5 5 5 2 2 . 
. . . . 2 5 5 5 5 5 5 5 5 5 2 . 
. . . . . 2 2 5 5 5 5 5 5 5 2 . 
. . 2 2 2 2 2 5 5 5 5 5 5 5 2 . 
. . 2 5 5 5 5 5 5 5 5 2 5 2 2 . 
. . 2 2 2 5 5 5 5 5 5 2 2 2 . . 
. . . . . 2 2 5 5 5 2 2 . . . . 
. . . . . 2 2 2 2 2 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image5":
            case "rock2":return img`
. . . . . . . . . . . . . . . . 
. . . . . f f f f f . . . . . . 
. . . . f f 9 9 9 f . . . . . . 
. . . . f 9 9 9 9 9 f f . . . . 
. . . f f f 9 9 9 9 9 f f f . . 
. . . f 9 9 9 9 9 9 9 9 f f . . 
. . f 9 9 9 9 9 9 9 9 9 f . . . 
. . f 9 9 9 9 9 9 9 f f . . . . 
. . f 9 9 9 9 9 9 9 f . . . . . 
. . f f 9 9 f f 9 9 f . . . . . 
. . f f 9 9 f f 9 9 f . . . . . 
. . . . f 9 f . f 9 f f . . . . 
. . . . f 9 f . . f 9 9 f . . . 
. . . . f f f . . f f 9 f . . . 
. . . . . . . . . . f f f . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image6":
            case "rubbld":return img`
. . . . . . . . . . . . . . . . 
. . f . f f f f . . . . . . . . 
. . f f 4 4 4 4 f f . . . . . . 
. f f f 4 4 4 4 4 f f . . . . . 
. f 4 4 4 4 4 4 4 4 f . . . . . 
. f 4 4 4 4 4 4 4 4 f . . . . . 
. f 4 4 4 4 4 4 f f . . . . . . 
. f 4 4 4 4 4 f . . . . . . . . 
. f f f f 4 4 f . . . . . . . . 
. . . . f f f f . . . . . . . . 
. . . . . . f . . . . . . . . . 
. . f . . . . . . . . 4 4 4 4 . 
. f f f f f . . . 4 4 2 2 2 4 4 
. f 5 5 5 f . . . 4 2 2 2 2 4 4 
. f 5 5 5 f . . . 4 4 2 2 2 4 . 
. f f f f f . . . . 4 4 4 4 4 . 
`;
            case "image7":
            case "rubbld0":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . f f f f . 6 . . 
. . . . . . 6 6 4 4 4 4 6 6 . . 
. . . . . 6 6 4 4 4 4 4 6 6 6 . 
. . . . . 6 4 4 4 4 4 4 4 4 6 . 
. . . . . 6 4 4 4 4 4 4 4 4 6 . 
. . . . . . f f 4 4 4 4 4 4 6 . 
. . . . . . . . 6 4 4 4 4 4 6 . 
. . . . . . . . 6 4 4 6 6 6 6 . 
. . . . . . . . 6 6 6 6 . . . . 
. . . . . . . . . 6 . . . . . . 
. 4 4 4 4 . . . . . . . . 5 . . 
4 4 6 6 6 4 4 . . . 5 5 5 5 5 . 
4 4 6 6 6 6 4 . . . 5 c c c 5 . 
. 4 6 6 6 4 4 . . . 5 c c c 5 . 
. 4 4 4 4 4 . . . . 5 5 5 5 5 . 
`;
            case "image8":
            case "rubbld1":return img`
. . . . . . . . . . . . . . . . 
. . . f f f f f f . . . f f f f 
. f f f b b b b f . . f f b b f 
. . f f b b b b f . . . f b b f 
. f b b b b b b f f . . f b b f 
. f b b b b b b b f . . f f f f 
. f b b b b b b b f f . . . . . 
. f b b b b b f f f . . . . . . 
. . f b b b f . . . . . . . . . 
. . f f b b f . . . . . b b b . 
. . . f f f . . . . . . b b b b 
. . . . . . . . . . . b b b b b 
. . . . . . . . . . . b b b b b 
. . . . . . . . . . . b b b b b 
. . . . . . . . . . . b b b b b 
. . . . . . . . . . . . b b . . 
`;
            case "image9":
            case "starbase":return img`
..................................................
..................................................
..................................................
.................fffffffffffffff..................
.................fffffffffffffff..................
...............ffeeeeeeeeeeeeeeeff................
.............ffeeeeeeeeeeeee11eeeeff..............
.............ffeeeeeeeeeeeee11eeeeff..............
.............ffeeee11eeeeeeeeeeeeeff..............
.............ffeeee11eeeeeeeeeeeeeff..............
.............ffeeeeeeeeeee11ee11eeff..............
.............ffeeee11eeeeeeeeeeeeeff..............
.............ffeeee11eeeeeeeeeeeeeff..............
.............ffeeeeeeee111eeeeeeeeff..............
.......ffff..ffffffeeeeeeeeeee11eeff..ffffff......
.......ffff..ffffffeeeeeeeeeee11eeff..ffffff......
.....ffeeeeffffeefffffffffffffffffffffeeeeff......
.....ffeeeeffffeefffffffffffffffffffffeeeeff......
.......ffffffeeffeeeeeeeeeeeeeeeffeeeeeeff........
...........fffffffffffffffffffffffffffff..........
...........fffffffffffffffffffffffffffff..........
...............ffeeeeeeeeeffffff..................
...............ffeeeeeeeeeffffff..................
.................fffffffff........................
...................fffffffff......................
...................fffffffff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................ff88888ff......................
...................fffffffff......................
..................................................
..................................................
`;
        }
        return null;
    })

    helpers._registerFactory("animation", function(name: string) {
        switch(helpers.stringTrim(name)) {

        }
        return null;
    })

    helpers._registerFactory("song", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "$4BE~x=!^ljGb{S-t":
            case "test":return hex`0078000408020200001c00010a006400f4016400000400000000000000000000000000050000042a0000000400012a08000c00012a10001400012a18001c0001191c002000011d20002400012024002800012403001c0001dc00690000045e0100040000000000000000000005000001000003120000000400012708000c000127100014000124`;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
